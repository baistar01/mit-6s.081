1.	为什么必须是exit来关闭打开的文件，特别是管道？
xv6中，进程退出时，exit负责关闭该进程打开的所有文件，包括管道。
原因：管道是双向通信机制，可能有多个进程共享相同的管道文件描述符。如果在进程退出时没有关闭这些文件描述符，系统资源可能不会被及时回收，可能导致资源泄露。
如果通过wait来关闭文件，只有在父进程回收子进程时才会关闭文件描述符，这可能会延迟文件的关闭，特别是父进程没有立即wait的情况下。
管道的另一端可能仍在等待数据，如果文件没有及时关闭，管道读写会被挂起，导致死锁。因此，exit必须负责关闭文件以确保系统资源被及时释放。
2.	在xv6中实现信号量而不使用sleep和wakeup，只使用自旋锁。
信号量是一种进程同步机制，通过计数器和锁来管理共享资源的可用性。信号量有两种操作：P操作和V操作，这些操作用来控制对共享资源的访问。
实现：
使用自旋锁保护信号量计数器，每次操作时对信号量计数器进行增减。
当进程想要访问共享资源时，先检查信号量的计数器。计数器大于0，进程减少计数器并访问资源。如果计数器等于0，进程自旋，等待资源可用。
V操作增加信号量的值，表示资源可用，并唤醒等待的进程。
自旋锁可以通过轮询来实现同步，但这可能导致CPU资源浪费。
结果：信号量可以通过轮询实现，但相比于sleep和wakeup的实现效率较低。自旋锁在等待时会持续占用CPU，而sleep则会将进程挂起，释放CPU，直到资源可用时才唤醒。
